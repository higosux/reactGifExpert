{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mcAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAQ,IAC1BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKlB,SACQ,uBACIO,UAAU,qBACVC,KAAK,OACLC,MAAOV,EACPW,SAnBU,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,mCCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGrC,OADAc,QAAQC,IAAIN,EAAGC,EAAMV,GAEjB,sBAAKR,UAAU,2CAAf,UACI,qBAAKwB,IAAKhB,EAAKiB,IAAKP,IACpB,4BAAIA,QCHHQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECFX,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BsB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WACNzB,EAAQC,GACJyB,MAAM,SAACC,GAAD,OAEHH,EAAS,CACLhB,KAAKmB,EACLL,SAAS,SAItB,CAACrB,IAEGsB,EDdwBK,CAAa3B,GAA/Ba,EAHsB,EAG5BN,KAAac,EAHe,EAGfA,QAEpB,OACI,qCACI,mCAAMrB,KAELqB,GAAW,wCAEZ,qBAAK3B,UAAU,YAAf,SAESmB,EAAOJ,KAAK,SAACC,GAAD,OACb,cAAC,EAAD,eAESA,GADAA,EAAIC,aEdpBiB,EAAe,WAAM,MAIM3C,mBAAS,CAAC,kBAJhB,mBAIvB4C,EAJuB,KAIX7C,EAJW,KAQ9B,OACI,qCACI,oBAAIU,UAAU,oCAAd,0BACA,cAAC,EAAD,CAAaV,cAAgBA,IAC7B,uBAIA,6BAEQ6C,EAAWpB,KAAK,SAACT,GAAD,OACZ,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,cCnBlC8B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.750cf47c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length >2){\r\n            setCategories((cats) => [inputValue ,...cats ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"animate__heartBeat\"\r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={ handleInputChange }\r\n\r\n                />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n} \r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=3phRtKSzs8Rvo1ekKLa7zpR4eOcMxcmi&limit=10`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n    \r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n  \r\n\r\n    const {data: images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> {category}</h3>\r\n\r\n            {loading && <p>Loading</p> } \r\n\r\n            <div className=\"card-grid\">\r\n                \r\n                    {images.map( (img) => \r\n                    <GifGridItem\r\n                        key={img.id}\r\n                        { ...img }></GifGridItem>\r\n                )}\r\n                \r\n            </div>\r\n\r\n\r\n        </>\r\n            )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n         getGifs(category)\r\n            .then( (imgs) => \r\n         \r\n                setState({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n            )\r\n\r\n    }, [category])// cuando la categoria cambia se dispara el useEffect\r\n\r\n    return state;\r\n\r\n\r\n}","import { randomFillSync } from \"crypto\";\r\n\r\nimport React, { useState } from 'react'\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    // const categories = \r\n    const [categories, setCategories] = useState(['Dragon Ball F'])\r\n    \r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__animated animate__bounce\">GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>\r\n\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => \r\n                        <GifGrid\r\n                            key={ category } \r\n                            category={ category} />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\nimport 'animate.css'\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}